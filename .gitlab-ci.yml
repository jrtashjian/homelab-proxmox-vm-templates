image:
  name: "registry.int.jrtashjian.com/homelab/terraform-images/releases/1.7:latest"

.nodes:
  parallel:
    matrix:
      - NODE: ["pve-node01", "pve-node02", "pve-node03"]

variables:
  ONEPASSWORD_BINARY_VERSION: "2.24.0"
  TF_HTTP_ADDRESS: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${CI_ENVIRONMENT_SLUG}"
  TF_HTTP_LOCK_ADDRESS: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${CI_ENVIRONMENT_SLUG}/lock"
  TF_HTTP_LOCK_METHOD: "POST"
  TF_HTTP_UNLOCK_ADDRESS: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${CI_ENVIRONMENT_SLUG}/lock"
  TF_HTTP_UNLOCK_METHOD: "DELETE"
  TF_HTTP_USERNAME: "gitlab-ci-token"
  TF_HTTP_PASSWORD: "${CI_JOB_TOKEN}"
  TF_HTTP_RETRY_WAIT_MIN: "5"
  TF_VAR_NODE_NAME: "${CI_ENVIRONMENT_SLUG}"

before_script:
  - curl -sLo op.zip "https://cache.agilebits.com/dist/1P/op2/pkg/v${ONEPASSWORD_BINARY_VERSION}/op_linux_amd64_v${ONEPASSWORD_BINARY_VERSION}.zip"
  - unzip op.zip
  - rm op.zip
  - mv ./op /usr/local/bin/op
  - op --version
  - printenv

stages:
  - plan
  - apply

plan:
  extends: .nodes
  stage: plan
  script:
    - terraform init -input=false
    - op run -- terraform plan -input=false -out=tfplan
    - op run -- terraform show -json tfplan > tfplan.json
  environment:
      name: "${NODE}"
  artifacts:
    name: "tfplan-${NODE}"
    paths:
      - tfplan
    reports:
      terraform: tfplan.json

apply:
  extends: .nodes
  stage: apply
  script:
    - terraform init -input=false
    - op run -- terraform apply -input=false -auto-approve tfplan
  dependencies:
    - plan
  when: manual
  environment:
    name: "${NODE}"
  only:
    - master
